USE TEST;
CREATE OR REPLACE TABLE t1 (x INT, y INT) WITH SYSTEM VERSIONING;
CREATE TRIGGER TRG BEFORE INSERT ON t1 FOR EACH ROW SET @a:=1;
SET @@TMP_DISK_TABLE_SIZE = 100;
SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA='test' AND TABLE_NAME='t1';

CREATE TABLE t1 (a INT);
CREATE TRIGGER tr1 BEFORE INSERT ON t1 FOR EACH ROW SET @a=1;
CREATE TRIGGER tr2 BEFORE DELETE ON t1 FOR EACH ROW SET @b=1;
SET TMP_DISK_TABLE_SIZE= 1024;
SHOW TRIGGERS;

# Sporadic, repeat 100+
CREATE DATABASE transforms;
CREATE TABLE t1(c1 MEDIUMINT NULL, c2 BINARY(25) NOT NULL, c3 BIGINT(4) NULL, c4 BINARY(15) NOT NULL PRIMARY KEY, c5 MEDIUMINT NOT NULL UNIQUE KEY,c6 FIXED(10,8) NOT NULL DEFAULT 3.141592);
CREATE TRIGGER tr1_bu BEFORE UPDATE ON t1 FOR EACH ROW SET @a:=3;
create trigger trg1 before insert on t1 for each row set @a:= 1;
SET @@session.tmp_disk_table_size = False;
CREATE TABLE q(b TEXT CHARSET latin1, fulltext(b)) engine=TokuDB;
SELECT * FROM INFORMATION_SCHEMA.TRIGGERS WHERE trigger_name = 'trg1'; ;

# Sporadic, repeat 100+
DROP DATABASE test;
CREATE DATABASE test;
USE test;
CREATE TABLE t (c1 MEDIUMINT NULL, c2 BINARY (25) NOT NULL, c3 BIGINT (4) NULL, c4 BINARY (15) NOT NULL PRIMARY KEY, c5 MEDIUMINT NOT NULL UNIQUE KEY,c6 FIXED (10,8) NOT NULL DEFAULT 1);
CREATE TRIGGER trb BEFORE UPDATE ON t FOR EACH ROW SET @a:=3;
CREATE TRIGGER tr BEFORE INSERT ON t FOR EACH ROW SET @a:=1;
SET SESSION tmp_disk_table_size=false;
CREATE TABLE q (b TEXT CHARSET latin1, fullTEXT (b)) ENGINE=TokuDB;
SELECT * FROM INFORMATION_SCHEMA.TRIGGERS WHERE TRIGGER_name='tr';

# Sporadic, repeat 2000+
DROP DATABASE test;
CREATE DATABASE test;
USE test;
CREATE TABLE t (a TEXT, FULLTEXT KEY(a)) ENGINE = Aria;
CREATE TRIGGER t_ai AFTER INSERT ON t FOR EACH ROW call bug14233_3 ();
ALTER TABLE mysql.help_KEYword ENGINE=MEMORY;
CREATE TABLE t (a decimal (10,2)) ( (SELECT * FROM t WHERE a <=3));
CREATE TEMPORARY TABLE t (c1 INT) ENGINE=MyISAM;
CREATE TRIGGER t_TRIGGER BEFORE INSERT ON t FOR EACH ROW DELETE FROM s WHERE id=1000000;
RENAME TABLE t2 TO t,t2 TO t3,t2 TO t3;
SET GLOBAL TABLE_open_cache = -1;
SET SESSION tmp_disk_TABLE_size = True;
SELECT TRIGGER_name, CREATEd, action_order FROM information_schema.TRIGGERs WHERE TRIGGER_schema='test';
