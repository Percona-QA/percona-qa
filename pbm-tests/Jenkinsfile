pipeline {
  agent none
  options { timestamps () }
  parameters {
    string(name: 'PBM_REPO', defaultValue: 'https://github.com/percona/percona-backup-mongodb.git', description: 'Target repository')
    string(name: 'PBM_BRANCH', defaultValue: 'master', description: 'Target branch')
    string(name: 'PBM_TEST_SUITE', defaultValue: 't', description: 'Test suite to run (or specify single test like t/replica-sanity-agents.sh)')
  }
  environment {
    PBM_TEST_MINIO_ACCESS_KEY = credentials('PBM_TEST_MINIO_ACCESS_KEY')
    PBM_TEST_MINIO_SECRET_KEY = credentials('PBM_TEST_MINIO_SECRET_KEY')
  }
  stages {
    stage('Run tests') {
      parallel {
        stage('Test PSMDB 3.6') {
          agent {
            label 'docker-32gb'
          }
          steps {
            sh '''
              docker logout
              docker stop pbm-test-minio && docker rm pbm-test-minio || true
              docker run -d \
              -p 9000:9000 \
              -e "MINIO_ACCESS_KEY=${PBM_TEST_MINIO_ACCESS_KEY}" \
              -e "MINIO_SECRET_KEY=${PBM_TEST_MINIO_SECRET_KEY}" \
              --name pbm-test-minio minio/minio server /data
              docker exec pbm-test-minio mkdir -p /data/pbm
            '''
            sh '''
              docker stop pbm-test && docker rm pbm-test || true
              docker pull perconalab/pbm-test:latest
              docker run --name=pbm-test --network="host" \
              -e MINIO_ACCESS_KEY_ID=${PBM_TEST_MINIO_ACCESS_KEY} \
              -e MINIO_SECRET_ACCESS_KEY=${PBM_TEST_MINIO_SECRET_KEY} \
              perconalab/pbm-test:latest ${PBM_REPO} ${PBM_BRANCH} ${PBM_TEST_SUITE} https://www.percona.com/downloads/percona-server-mongodb-3.6/percona-server-mongodb-3.6.13-3.3/binary/tarball/percona-server-mongodb-3.6.13-3.3-bionic-x86_64.tar.gz
              docker cp pbm-test:/pbm-test-run/test_results.xml .
              docker rm pbm-test
            '''
            sh '''
              docker stop pbm-test-minio && docker rm pbm-test-minio || true
            '''
          }
          post {
            always {
              junit "**/test_results.xml"
            }
          }
        } //End stage Test PSMDB 3.6
        stage('Test PSMDB 4.0') {
          agent {
            label 'docker-32gb'
          }
          steps {
            sh '''
              docker logout
              docker stop pbm-test-minio && docker rm pbm-test-minio || true
              docker run -d \
              -p 9000:9000 \
              -e "MINIO_ACCESS_KEY=${PBM_TEST_MINIO_ACCESS_KEY}" \
              -e "MINIO_SECRET_KEY=${PBM_TEST_MINIO_SECRET_KEY}" \
              --name pbm-test-minio minio/minio server /data
              docker exec pbm-test-minio mkdir -p /data/pbm
            '''
            sh '''
              docker stop pbm-test && docker rm pbm-test || true
              docker pull perconalab/pbm-test:latest
              docker run --name=pbm-test --network="host" \
              -e MINIO_ACCESS_KEY_ID=${PBM_TEST_MINIO_ACCESS_KEY} \
              -e MINIO_SECRET_ACCESS_KEY=${PBM_TEST_MINIO_SECRET_KEY} \
              perconalab/pbm-test:latest ${PBM_REPO} ${PBM_BRANCH} ${PBM_TEST_SUITE} https://www.percona.com/downloads/percona-server-mongodb-4.0/percona-server-mongodb-4.0.12-6/binary/tarball/percona-server-mongodb-4.0.12-6-bionic-x86_64.tar.gz
              docker cp pbm-test:/pbm-test-run/test_results.xml .
              docker rm pbm-test
            '''
            sh '''
              docker stop pbm-test-minio && docker rm pbm-test-minio || true
            '''
          }
          post {
            always {
              junit "**/test_results.xml"
            }
          }
        } //End stage Test PSMDB 4.0
        stage('Test PSMDB 4.2') {
          agent {
            label 'docker-32gb'
          }
          steps {
            sh '''
              docker logout
              docker stop pbm-test-minio && docker rm pbm-test-minio || true
              docker run -d \
              -p 9000:9000 \
              -e "MINIO_ACCESS_KEY=${PBM_TEST_MINIO_ACCESS_KEY}" \
              -e "MINIO_SECRET_KEY=${PBM_TEST_MINIO_SECRET_KEY}" \
              --name pbm-test-minio minio/minio server /data
              docker exec pbm-test-minio mkdir -p /data/pbm
            '''
            sh '''
              docker stop pbm-test && docker rm pbm-test || true
              docker pull perconalab/pbm-test:latest
              docker run --name=pbm-test --network="host" \
              -e MINIO_ACCESS_KEY_ID=${PBM_TEST_MINIO_ACCESS_KEY} \
              -e MINIO_SECRET_ACCESS_KEY=${PBM_TEST_MINIO_SECRET_KEY} \
              perconalab/pbm-test:latest ${PBM_REPO} ${PBM_BRANCH} ${PBM_TEST_SUITE} https://www.percona.com/downloads/percona-server-mongodb-4.2/percona-server-mongodb-4.2.0-1/binary/tarball/percona-server-mongodb-4.2.0-1-bionic-x86_64.tar.gz
              docker cp pbm-test:/pbm-test-run/test_results.xml .
              docker rm pbm-test
            '''
            sh '''
              docker stop pbm-test-minio && docker rm pbm-test-minio || true
            '''
          }
          post {
            always {
              junit "**/test_results.xml"
            }
          }
        } //End stage Test PSMDB 4.2
      } //End parallel
    } //End stage Run tests
  } //End stages
} //End pipeline
