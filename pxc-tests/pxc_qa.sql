select ("Test schema creation");
DROP DATABASE IF EXISTS testdb;
CREATE DATABASE testdb;
ALTER DATABASE testdb DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
ALTER DATABASE testdb DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
USE testdb;
select ("Test Create/Alter statements");
CREATE TABLE t1 (c1 INT NOT NULL AUTO_INCREMENT PRIMARY KEY);
ALTER TABLE t1 ROW_FORMAT = COMPRESSED;
ALTER TABLE t1 ADD COLUMN c2 INT;
ALTER TABLE t1 ADD COLUMN c3 INT GENERATED ALWAYS AS (c2 + 1) STORED;
CREATE INDEX idx1 ON t1 ((c2 + c3));
INSERT INTO t1 (c1,c2) VALUES(1,2),(4,5),(7,8);
TRUNCATE TABLE t1;
INSERT INTO t1 (c1,c2) VALUES(1,2),(4,5),(7,8);
INSERT INTO t1(c2) SELECT (c2) FROM t1;
ANALYZE TABLE t1 UPDATE HISTOGRAM ON c1, c2, c3 WITH 10 BUCKETS;
ANALYZE TABLE t1 UPDATE HISTOGRAM ON c1, c3 WITH 10 BUCKETS;
ANALYZE TABLE t1 DROP HISTOGRAM ON c2;
ALTER TABLE t1 DROP INDEX idx1;
SELECT c2 INTO OUTFILE '/tmp/result.txt' FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '"' LINES TERMINATED BY '\n' FROM t1;
LOAD DATA INFILE '/tmp/result.txt' INTO TABLE t1 FIELDS TERMINATED BY ',' ENCLOSED BY '"' LINES TERMINATED BY '\n' (c2);
ALTER TABLE t1 ADD COLUMN c4 INT, ALGORITHM=INSTANT;
ALTER TABLE t1 ADD COLUMN c5 INT, ALGORITHM=COPY;
ALTER TABLE t1 ADD COLUMN c6 INT, ALGORITHM=INPLACE;
CHECK TABLE t1 FAST QUICK;
CHECKSUM TABLE t1;
OPTIMIZE TABLE t1;
REPAIR TABLE t1;
select ("Test temp table statements");
CREATE TEMPORARY TABLE tmp1 SELECT * FROM t1 LIMIT 0;
CREATE TEMPORARY TABLE tmp2 SELECT * FROM t1;
CREATE TABLE n1 LIKE t1;
CREATE TABLE n2 (m INT) SELECT n FROM foo;
DROP TABLE n2,n1,tmp2,tmp1;
CREATE INDEX idx2 ON t1 (c5);
ALTER TABLE t1 ADD INDEX idx3(c6);
DROP INDEX idx3 ON t1;
START TRANSACTION;
SELECT @A:=SUM(c2) FROM t1;
UPDATE t1 SET c2=@A WHERE c1=1;
COMMIT;
FLUSH ENGINE LOGS;
SET autocommit=0;
SELECT @A:=SUM(c2) FROM t1;
UPDATE t1 SET c2=@A WHERE c1=1;
COMMIT;
FLUSH ERROR LOGS;
SET autocommit=1;
BEGIN;
SELECT @A:=SUM(c2) FROM t1;
UPDATE t1 SET c2=@A WHERE c1=1;
COMMIT;
FLUSH GENERAL LOGS;
LOCK INSTANCE FOR BACKUP;
FLUSH TABLES t1 WITH READ LOCK;
UNLOCK TABLES;
UNLOCK INSTANCE;
LOCK TABLES t1 WRITE;
UNLOCK TABLES;
FLUSH BINARY LOGS;
CREATE EVENT e1 ON SCHEDULE EVERY 1 HOUR DO UPDATE t1 SET c2 = c2 + 1;
ALTER EVENT e1 COMMENT 'Clears out sessions table each hour.';
DROP EVENT IF EXISTS e1;
FLUSH HOSTS;
FLUSH LOGS;
FLUSH PRIVILEGES;
FLUSH RELAY LOGS;
FLUSH SLOW LOGS;
FLUSH STATUS;
FLUSH USER_RESOURCES;
FLUSH TABLES;
RESET PERSIST;
ALTER TABLE t1 DROP COLUMN c3;
UPDATE t1 SET c2 = c2 + 1;
RENAME TABLE t1 TO t2;
ALTER TABLE t2 DROP COLUMN c4;
ALTER TABLE t2 DROP COLUMN c5;
ALTER TABLE t2 DROP COLUMN c6;
REPLACE INTO t2 VALUES (1, '4444');
DELETE FROM t2 limit 1;
select ("Test view statements");
CREATE VIEW v1 AS SELECT * FROM t2 WHERE c1 < 2 WITH CHECK OPTION;
CREATE VIEW v2 AS SELECT * FROM v1 WHERE c1 > 0 WITH LOCAL CHECK OPTION;
CREATE VIEW v3 AS SELECT * FROM v1 WHERE c1 > 0 WITH CASCADED CHECK OPTION;
DROP VIEW v3, v2;
DROP VIEW v1;
DROP TABLE t2;
select ("Test tablespace statements");
DROP TABLESPACE ts1;
DROP TABLESPACE ts2;
DROP UNDO TABLESPACE undo_003;
CREATE TABLESPACE `ts1` ADD DATAFILE 'ts1.ibd' ENGINE=INNODB;
CREATE TABLE t1 (c1 INT PRIMARY KEY) TABLESPACE ts1 ROW_FORMAT=REDUNDANT;
CREATE TABLE t2 (c1 INT PRIMARY KEY) TABLESPACE ts1 ROW_FORMAT=COMPACT;
CREATE TABLE t3 (c1 INT PRIMARY KEY) TABLESPACE ts1 ROW_FORMAT=DYNAMIC;
CREATE TABLESPACE `ts2` ADD DATAFILE 'ts2.ibd' FILE_BLOCK_SIZE = 8192 Engine=InnoDB;
CREATE TABLE t4 (c1 INT PRIMARY KEY) TABLESPACE ts2 ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=8;
CREATE UNDO TABLESPACE undo_003 ADD DATAFILE 'undo_003.ibu';
ALTER TABLE t1 DISCARD TABLESPACE;
ALTER TABLE t2 DISCARD TABLESPACE;
RENAME TABLE t1 TO rt1, t2 TO rt2;
DROP TABLE rt1,rt2,t3;
DROP TABLESPACE ts1;
DROP TABLESPACE ts2;
DROP UNDO TABLESPACE undo_003;
DROP DATABASE IF EXISTS testdb;
DROP DATABASE db1;
CREATE DATABASE db1;
select ("Test user/role statements");
CREATE ROLE r1, r2;
CREATE ROLE 'r3'@'localhost';
CREATE USER 'u1'@'localhost' IDENTIFIED BY 'pass';
CREATE USER 'u2'@'localhost' IDENTIFIED WITH mysql_native_password BY 'pass', 'u3'@'localhost' IDENTIFIED WITH sha256_password BY 'pass' REQUIRE X509 WITH MAX_QUERIES_PER_HOUR 60 PASSWORD HISTORY 5 ACCOUNT LOCK;
CREATE USER 'u4' DEFAULT ROLE r1, r2;
CREATE USER 'u5'  WITH MAX_QUERIES_PER_HOUR 500 MAX_UPDATES_PER_HOUR 100;
CREATE USER 'u6' PASSWORD EXPIRE;
CREATE USER 'u7' PASSWORD HISTORY DEFAULT;
CREATE USER 'u8' PASSWORD REUSE INTERVAL DEFAULT;
CREATE USER 'u9' PASSWORD REQUIRE CURRENT;
ALTER USER 'u8'@ ACCOUNT LOCK;
ALTER USER 'u8'@ ACCOUNT UNLOCK;
ALTER USER u9 DISCARD OLD PASSWORD;
ALTER USER U9 REQUIRE X509;
GRANT ALL ON db1.* TO u4;
GRANT r1, r2 TO u5,u6;
GRANT SELECT ON db1.* TO r1;
REVOKE SELECT ON db1.* FROM r1;
REVOKE r1, r2 FROM u5,u6;
RENAME USER U4 TO newu4;
SET DEFAULT ROLE r1, r2 TO u5;
SET PASSWORD FOR 'u6' = 'pass';
SET ROLE DEFAULT;
SET ROLE 'r1', 'r2';
DROP USER u1,u2,u3,newu4,u5,u6,u7,u8,u9;
DROP ROLE r2,r1;
select ("Test resource group statements");
DROP RESOURCE GROUP rg1;
CREATE RESOURCE GROUP rg1 TYPE = USER VCPU = 0  THREAD_PRIORITY = 19;
ALTER RESOURCE GROUP rg1 VCPU = 4;
SET RESOURCE GROUP rg1;
ALTER RESOURCE GROUP rg1;
ALTER RESOURCE GROUP rg1 DISABLE FORCE;
DROP RESOURCE GROUP rg1;
select ("Test plugin installation statements");
INSTALL COMPONENT "file://component_validate_password";
UNINSTALL COMPONENT "file://component_validate_password";
INSTALL PLUGIN version_tokens SONAME 'version_token.so';
UNINSTALL PLUGIN version_tokens;
select ("Test table partition statements");
CREATE DATABASE partdb DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
CREATE TABLE partdb.pt1 (col1 INT, col2 CHAR(5)) PARTITION BY HASH(col1);
CREATE TABLE partdb.pt2 (col1 INT, col2 CHAR(5), col3 DATETIME) PARTITION BY HASH ( YEAR(col3) );
CREATE TABLE partdb.pt3 (col1 INT, col2 CHAR(5), col3 DATE) PARTITION BY KEY(col3) PARTITIONS 4;
CREATE TABLE partdb.pt4 (col1 INT, col2 CHAR(5), col3 DATE) PARTITION BY LINEAR KEY(col3) PARTITIONS 5;
ALTER TABLE partdb.pt1 COMMENT = 'test';
DROP TABLE partdb.pt4,partdb.pt3,partdb.pt2,partdb.pt1;
DROP SCHEMA partdb;