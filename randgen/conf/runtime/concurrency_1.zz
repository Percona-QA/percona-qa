# Copyright (c) 2008-2010,2012 Oracle and/or its affiliates. All rights reserved.
# Use is subject to license terms.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301
# USA

# Grammar for generation of templates of testing objects (tables).
#
# Attention:
# 1. The SQL grammar concurrency_1.yy is highly adjusted to the objects
#    generated by concurrency_1.zz.
#    So please do not modify concurrency_1.zz without adjusting
#    concurrency_1.yy too.
# 2. In concurrency_1.yy we
#    - work on copies of the objects
#    - do not modify the objects
#    created here.
#    Therefore specialities like
#    1. "Special" tables like partitioned, merged, views etc.
#    2. Variation of the storage engine
#    make no sense.
#
# Please read conf/runtime/concurrency_1.yy for more information.
#

# rows => [0, 1, 10, 100 ], might look nice but causes some significant growth
# of data in vardir per server.
# vardir in tmpfs + several parallel RQG runs becomes critical because of the
# limited space in tmpfs. I got a crowd of rare or never seen + not good
# reproducible crashes in various server components. It is till now not clear
# if these crashes are caused by the shortage of free space in tmpfs at all.
# But the likelihood of crashes drops drastic in case there is enough free space.
$tables = {
   rows => [0, 1, 10 ],
   pk   => [ 'int' , 'int auto_increment' ]
};

$fields = {
   types   => [ 'int', 'varchar(64)', 'decimal', 'float', 'blob' ],
   indexes => [ undef ]
};

$data = {
   numbers   => [ 'digit', 'null', undef ],
   strings   => [ 'letter', 'english' ],
   blobs     => [ 'data' ],
   temporals => [ 'date', 'year', 'null', undef ]
}
